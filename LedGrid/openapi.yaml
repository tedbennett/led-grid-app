---
openapi: 3.0.0
info:
  title: Pixee API
  version: 0.1.0
servers:
- url: 0.0.0.0:8000
  description: Local Server
- url: "https://pixee--dev.fly.dev/v1"
  description: Dev Server
paths:
# ==========================================================================
# User endpoints
# ==========================================================================
  /user/me:
    get:
      operationId: getMe
      responses:
        "200":
          description: Get profile
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "403":
          description: Unauthenticated
        "404":
          description: Not found
      security:
        - BearerAuth: []
    patch:
      operationId: updateMe
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateUserPayload"
      responses:
        "204":
          description: Profile updated
        "403":
          description: Unauthenticated
      security:
        - BearerAuth: []
    delete:
      operationId: deleteMe
      responses:
        "204":
          description: Account deleted
        "403":
          description: Unauthenticated
      security:
        - BearerAuth: []
  /user/search:
    get:
      operationId: searchUsers
      parameters:
        - in: query
          name: username
          schema:
            type: string
          required: true
      responses:
        "200":
          description: Username search results
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        "403":
          description: Unauthenticated
      security:
        - BearerAuth: []
  /user/check:
    get:
      operationId: checkUsername
      parameters:
        - in: query
          name: username
          schema:
            type: string
          required: true
      responses:
        "200":
          description: Username availibility results
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CheckUsernameResponse"
        "403":
          description: Unauthenticated
      security:
        - BearerAuth: []
  /user/device:
    post:
      operationId: createDevice
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateDevicePayload"
      responses:
        "204":
          description: Device Created
        "403":
          description: Unauthenticated
      security:
        - BearerAuth: []
# ==========================================================================
# Friend endpoints
# ==========================================================================
  /user/friend:
    get:
      operationId: getFriends
      responses:
        "200":
          description: Get friends
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Friend"
        "403":
          description: Unauthenticated
      security:
        - BearerAuth: []
  /user/friend/{friendId}:
    post:
      operationId: addFriend
      parameters:
      - in: path
        name: friendId
        schema:
            type: string
            format: uuid
        required: true
      responses:
        "204":
          description: Created friend
        "403":
          description: Unauthenticated
      security:
        - BearerAuth: []
    delete:
      operationId: deleteFriend
      parameters:
      - in: path
        name: friendId
        schema:
            type: string
            format: uuid
        required: true
      responses:
        "204":
          description: Deleted friend
        "403":
          description: Unauthenticated
      security:
        - BearerAuth: []
  /user/friend/request:
    post:
      operationId: sendFriendRequest
      parameters:
        - in: query
          name: user
          schema:
            type: string
            format: uuid
          required: true
      responses:
        "200":
          description: Created friend request
          content:
            application/json:
              schema:
                type: string
                format: uuid
        "403":
          description: Unauthenticated
      security:
        - BearerAuth: []
  /user/friend/request/sent:
    get:
      operationId: getSentFriendRequests
      responses:
        "200":
          description: Sent friend requests
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/FriendRequest"
        "403":
          description: Unauthenticated
      security:
        - BearerAuth: []
  /user/friend/request/received:
    get:
      operationId: getReceivedFriendRequests
      responses:
        "200":
          description: Received friend requests
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/FriendRequest"
        "403":
          description: Unauthenticated
      security:
        - BearerAuth: []
  /user/friend/request/{requestId}:
    patch:
      operationId: updateFriendRequest
      parameters:
        - in: path
          name: requestId
          schema:
            type: string
            format: uuid
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateFriendRequestPayload"
      responses:
        "204":
          description: Updated friend request
        "403":
          description: Unauthenticated
        "404":
          description: Not Found
      security:
        - BearerAuth: []

# ==========================================================================
# Drawings
# ==========================================================================
  
  /drawing:
    post:
      operationId: sendDrawing
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SendDrawingPayload"
      responses:
        "204":
          description: Sent drawing
        "403":
          description: Unauthenticated
  /drawing/sent:
    get:
      operationId: getSentDrawings
      parameters:
        - in: query
          name: since
          schema:
            type: string
            format: date-time
          required: false
      responses:
        "200":
          description: Got sent drawings
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Drawing"
        "403":
          description: Unauthenticated
  /drawing/received:
    get:
      operationId: getReceivedDrawings
      parameters:
        - in: query
          name: since
          schema:
            type: string
            format: date-time
          required: false
      responses:
        "200":
          description: Got received drawings
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Drawing"
        "403":
          description: Unauthenticated
      security:
        - BearerAuth: []

# ==========================================================================
# Components
# ==========================================================================

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
  schemas:
    User:
      type: object
      required:
      - plus
      - id
      - username
      - email
      - createdAt
      - updatedAt
      - image
      - name
      properties:
        createdAt:
          type: string
          format: date-time
        email:
          type: string
        emailVerified:
          type: string
          format: date-time
          nullable: true
        id:
          type: string
          format: uuid
        image:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        plus:
          type: boolean
        updatedAt:
          type: string
          format: date-time
          nullable: true
        username:
          type: string
    Friend:
      type: object
      required:
      - id
      - username
      - email
      - createdAt
      - image
      - name
      properties:
        createdAt:
          type: string
          format: date-time
        email:
          type: string
        id:
          type: string
          format: uuid
        image:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        username:
          type: string
    FriendRequest:
      type: object
      required:
      - id
      - userId
      - username
      - status
      - createdAt
      - updatedAt
      properties:
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
          nullable: true
        userId:
          type: string
          format: uuid
        name:
          type: string
        username:
          type: string
        id:
          type: string
          format: uuid
        status:
          type: string
    Drawing:
      type: object
      required:
      - id
      - senderId
      - grid
      - createdAt
      - updatedAt
      - receivers
      properties:
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
          nullable: true
        senderId:
          type: string
          format: uuid
        receivers:
          type: array
          items:
            type: string
            format: uuid
        id:
          type: string
          format: uuid
        grid:
          type: array
          items:
            type: array
            items:
              type: array
              items:
                type: string

    UpdateUserPayload:
      type: object
      required:
        - image
        - name
        - plus
        - username
      properties:
        image:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        plus:
          type: boolean
          nullable: true
        username:
          type: string
          nullable: true
    CheckUsernameResponse:
      type: object
      required:
        - available
      properties:
        available:
          type: boolean
    CreateDevicePayload:
      type: object
      required:
        - deviceId
        - sandbox
        - os
      properties:
        deviceId:
          type: string
        os:
          type: string
        sandbox:
          type: boolean
    CreateFriendRequestResponse:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          format: uuid
    UpdateFriendRequestPayload:
      type: object
      required:
        - status
      properties:
        status:
          type: string
    SendDrawingPayload:
      type: object
      required:
        - drawing
        - receivers
      properties:
        drawing:
          type: array
          items:
            type: array
            items:
              type: array
              items:
                type: string
        receivers:
          type: array
          items:
            type: string
            format: uuid
        title:
          type: string
          nullable: true
